[{"code":"int binarySearch(int arr[], int n, int target){\r\n    int found = 0;\r\n    for(int i=0;i<n;i++){\r\n        if(arr[i] == target){\r\n            found = i;\r\n        }\r\n    }\r\n    return found;\r\n}","language":"c","time":"2025-05-28T07:50:24.710Z","isCorrect":false},{"code":"int binarySearch(int arr[], int n, int target){\r\n    int found = 0;\r\n    for(int i=0;i<n;i++){\r\n        if(arr[i] == target){\r\n            found = i+1;\r\n        }\r\n    }\r\n    return found;\r\n}","language":"c","time":"2025-05-28T07:50:39.530Z","isCorrect":false},{"code":"int binarySearch(int arr[], int n, int target){\r\n    int found = 0;\r\n    int index = 0;\r\n    for(int i=0;i<n;i++){\r\n        if(arr[i] == target){\r\n            found = 1;\r\n            index = i;\r\n        }\r\n    }\r\n    if(found) return index;\r\n    else{\r\n        return -1;\r\n    }\r\n}","language":"c","time":"2025-05-28T07:52:07.161Z","isCorrect":false},{"code":"int binarySearch(int arr[], int n, int target){\r\n    // int found = 0;\r\n    // int index = 0;\r\n    // for(int i=0;i<n;i++){\r\n    //     if(arr[i] == target){\r\n    //         found = 1;\r\n    //         index = i;\r\n    //     }\r\n    // }\r\n    // if(found) return index;\r\n    // else{\r\n    //     return -1;\r\n    // }\r\n\r\n    int low = 0;\r\n    int high = n - 1;\r\n\r\n    while(low<=high) {\r\n        int mid =low + (high - low) / 2;\r\n\r\n        if(arr[mid] == target) {\r\n            return mid;\r\n        }else if(arr[mid] < target) {\r\n            low = mid -1;\r\n        } else{\r\n            high = mid -1;\r\n        }\r\n    }\r\n    return -1;\r\n}","language":"c","time":"2025-05-28T09:05:53.320Z","isCorrect":false}]